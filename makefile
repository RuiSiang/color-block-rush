#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CC = gcc.exe
CXX = g++.exe
AR = ar.exe
LD = g++.exe
WINDRES = windres.exe

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_RELEASE = $(INC) -Iinclude -Iinclude\SDL2
CFLAGS_RELEASE = $(CFLAGS)
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -Llib -mwindows
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s -lmingw32 -L\mingw64\bin -lSDL2_ttf -lSDL2_mixer -lSDL2_image -lSDL2main -lSDL2
OBJDIR_RELEASE = obj
DEP_RELEASE = 
OUT_RELEASE = bin\\color-block-rush.exe

OBJ_RELEASE = $(OBJDIR_RELEASE)\\LTexture.o $(OBJDIR_RELEASE)\\ai.o $(OBJDIR_RELEASE)\\attacker.o $(OBJDIR_RELEASE)\\defender.o $(OBJDIR_RELEASE)\\main.o $(OBJDIR_RELEASE)\\map.o $(OBJDIR_RELEASE)\\winner.o

all: release

clean: clean_release

before_release: 
	cmd /c if not exist bin md bin
	cmd /c if not exist $(OBJDIR_RELEASE) md $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)\\LTexture.o: LTexture.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c LTexture.cpp -o $(OBJDIR_RELEASE)\\LTexture.o

$(OBJDIR_RELEASE)\\ai.o: ai.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ai.cpp -o $(OBJDIR_RELEASE)\\ai.o

$(OBJDIR_RELEASE)\\attacker.o: attacker.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c attacker.cpp -o $(OBJDIR_RELEASE)\\attacker.o

$(OBJDIR_RELEASE)\\defender.o: defender.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c defender.cpp -o $(OBJDIR_RELEASE)\\defender.o

$(OBJDIR_RELEASE)\\main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)\\main.o

$(OBJDIR_RELEASE)\\map.o: map.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c map.cpp -o $(OBJDIR_RELEASE)\\map.o

$(OBJDIR_RELEASE)\\winner.o: winner.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c winner.cpp -o $(OBJDIR_RELEASE)\\winner.o

clean_release: 
	cmd /c del /f $(OBJ_RELEASE) $(OUT_RELEASE)
	cmd /c rd $(OBJDIR_RELEASE)

.PHONY: before_release after_release clean_release

